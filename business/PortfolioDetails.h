 #ifndef PORTFOLIODETAILS_H
#define PORTFOLIODETAILS_H

#pragma once
#include <string>
#include "../models/Portfolio.h"
struct PortfolioDetails
{
         double KUNDENID;
         double PORTFOLIONO;
         std::string BEZEICHNUNG;
         std::string MANAGEMENTTYP_CD;
         std::string MANAGER1_CD;
         std::string MANAGER2_CD;
         std::string MANAGER3_CD;
         std::string MANAGER4_CD;
         std::string MANAGER5_CD;
         std::string VERMITTLER_CD;
         std::string INFOVOLLMACHT;
         std::string KONTAKT;
         std::string ERTRAEGNISAUF_CD;
         std::string WAEHRUNGS_CD;
         std::string BELEGSATZ_CD;
         std::string LOESCH_CD;
         trantor::Date LOESCHDATUM;
         trantor::Date CRTDATUM;
         std::string CRTUSER;
         trantor::Date MUTDATUM;
         std::string MUTUSER;
         std::string MISDOMIZIL_CD;
         std::string ANLAGESTRATEGIE_CD;
         std::string USWBASKET_CD;
         std::string VERSANDHAEUFIG_CD;
         std::string RUBRIK;
         std::string VERWALTUNGSMODUS_CD;
         trantor::Date KUNDELETZTERBESUCH;
         std::string ANTRAGSORT;
         trantor::Date ANTRAGSDATUM;
         std::string ANDEREPOSTADRESSE_CD;
         std::string BANKLAGERND_CD;
         std::string SPEZIALINSTRUKTION;
         std::string GELDVONKONTOINHABER_CD;
         std::string MANUALOPEN_CD;
         std::string KONTONUMMER1;
         std::string KONTONUMMER2;
         std::string KONTONUMMER3;
         std::string FILIAL_CD;
         std::string RUBRIK1;
         std::string RUBRIK2;
         std::string RUBRIK3;
         double ONLINE_CD;
         std::string PORTFOLIOTYP_CD;
         std::string CDPARTC;
         std::string PO_EU_TAX_PROZENT;
         std::string APSYS_STATUS_OPEC;
         double APSYS_ERRI;
         std::string APSYS_SHNAS;
         std::string APSYS_TYPMDCS;
         std::string APSYS_INTILGS;
         std::string APSYS_SHLIBPTFS;
         std::string APSYS_CDSTATDUSC;
         trantor::Date APSYS_DTDEBPARTL;
         trantor::Date APSYS_DTFINPARTL;
         std::string APSYS_IDSTRUCS;
         double APSYS_CDPERMI;
         std::string APSYS_CDCTGPTFINTS;
         std::string APSYS_CDCTGPTFSTES;
         std::string APSYS_CDCTGPTFSTMS;
         std::string APSYS_CDCTGPTFMAFS;
         std::string APSYS_CDCTGPTFRISKS;
         std::string APSYS_CDCTGPTFCOUS;
         std::string APSYS_CDCTGPTFTRCS;
         std::string APSYS_CDCTGPTFSTEBRUTNETS;
         std::string APSYS_FLAGIRSREPPARTC;
         std::string APSYS_CDCTGPTFTAXINTS;
         std::string APSYS_IDPOCS;
         std::string APSYS_INFO;
         std::string NETTOVERMOEGEN_CHF;
         std::string APSYS_INTISHS;
         double APSYS_IDPERSL;
         std::string APSYS_CDMOTIFPARTS;
         std::string IN_APSYS_TEMP_ENTSP_USERID;
         trantor::Date IN_APSYS_TEMP_ENTSP_DATUM;
         std::string IN_APSYS_TEMP_ENTSPERREN_CD;
         double KUNDENKATEGORIE_CD;
         std::string GEMEINSCHAFTSKONTO_CD;
         std::string DRITTE_SAEULE_CD;
         std::string APSYS_TYPPTFS;
         std::string AUTO_EU_TAX_PERCENTAGE;
         double AKTID;
         double VALIDID;
         std::string VALID_CD;
         std::string VALIDUSER;
         std::string APSYS_CDCTGPTFSBXPS;
         std::string APSYS_CDCTGPTFSDOCS;
         std::string APSYS_IDENTS;
         std::string APSYS_CDSOUMBOLC;
         std::string APSYS_CDFACBOLC;
         std::string APSYS_FLAGTYPTRFPOLC;
         std::string APSYS_IDTRFPOLS;
         std::string APSYS_CDPCTPARTICTITUEUTAXC;
         std::string APSYS_CDMOTIFCLOS;
         std::string ENC_SALT;
         std::string BEZEICHNUNG_ENC;
         std::string KTOE_AML_PROFIL_CD;
         std::string APSYS_DEVEVALS;
         std::string APSYS_CDRNVSTMC;
         std::string APSYS_CDRGLPRLGC;
         std::string APSYS_CDCTGPTFCOMAGTCPTS;
         std::string APSYS_CDCTGPTFROUTORDS;
         std::string APSYS_CDCTGPTFGRECPTS;
         std::string APSYS_CDCTGPTFTRSFTITS;
         std::string APSYS_FLAGEXPSYSEXTTAXI;
         std::string WB_IST_NICHT_ZWINGEND_CD;
         std::string APSYS_CDBQERESTC;
         std::string APSYS_CDCTGPTFTYPPLACS;
         std::string APSYS_CDEANGRMTCLI1S;
         std::string APSYS_CDEANGRMTCLI2S;
         std::string APSYS_CDFATCATYPC;
         std::string APSYS_IDFATCACLAS;
         std::string APSYS_CDFATCASTATCALCCRMC;
         std::string APSYS_CDFATCASTATC;
         std::string APSYS_COMMENTFATCASTATS;
         std::string APSYS_CDFATCAMOTIFPARTS;
         std::string APSYS_CDFATCASTATCALCGLOBC;
         std::string APSYS_CDFATCASTATCALCLOCC;
         std::string APSYS_CDVALIDSTATC;
         std::string APSYS_USERVALIDFATCASTATS;
         trantor::Date APSYS_DTVALIDFATCASTATL;
         trantor::Date APSYS_HRVALIDFATCASTATL;
         std::string APSYS_CDCTRNETTC553C;
         std::string APSYS_FLAGFORCEPOSOSTMANAGI;
         std::string APSYS_POSOSTMANAGC;
         double APSYS_CRITEREUSFATCASTATL;
         std::string APSYS_FLAGSIMSI;
         double NR_OF_BO_IN_WHT_STATEMENT;
         std::string PARTNER_WITH_UNL_LIABILITY_CD;
         std::string COMPANY_MANAGED_BY_BO_CD;
         std::string IS_TRUSTEE_PHYSICAL_CD;
         std::string NO_TRADING_US_SECURITIES_CD;
         std::string PORTFOLIO_SEGR_ACCOUNT_CD;
         trantor::Date US_WHT_START_DATE;
         std::string APSYS_CDCTGPTFIVSTAUTOS;
         std::string AUTOMATISCHE_VERTEILUNG_CD;
         std::string APSYS_CDTYPREPORTQIC;
         std::string APSYS_FLAGIRSNONACTIFI;
         std::string OPENING_DOCUMENTS_PROPOSED_CD;
         std::string APSYS_CDCTGPTFALGCPTS;
         std::string APSYS_IDSTRUCFORJURS;
         std::string APSYS_IDENTFORJURS;
         double FATCA_BASKET_CD;
         std::string APSYS_CDMETHCLOC;
         trantor::Date APSYS_DTEVALCLOL;
         std::string AEOI_EXEMPTION_CD;
         std::string AEOI_SUB_EXEMPTION_CD;
         std::string UNDOCUMENTED_ACCOUNT_CD;
         std::string DORMANT_ACCOUNT_CD;
         std::string AEOI_CONSISTENCY_STATUS_CD;
         std::string AEOI_FINAL_STATUS_CD;
         trantor::Date AEOI_REVIEW_DATE;
         std::string APSYS_CDMIFIDEXEMPTC;
         trantor::Date APSYS_DTDEBMIFIDL;
         trantor::Date OPENED_IN_APSYS_DATE;
         std::string APSYS_FLAGDELDATAPERSI;
         trantor::Date APSYS_DTWAITDELDATAPERSL;
         std::string APSYS_CDPTFSELDGSC;
         std::string APSYS_CDMOTIFPARTDGSS;
         std::string EAM_CD;
         std::string RETENTION_ON_HOLD;
         std::string LOGICAL_ERASURE;
         trantor::Date RETENTION_ON_HOLD_DATE;
         std::string RETENTION_ON_HOLD_REASON;
         trantor::Date LOGICAL_ERASURE_DATE;
         std::string LOGICAL_ERASURE_REASON;
         PortfolioDetails(){}
         explicit PortfolioDetails(const drogon_model::cim_web::Portfolio &Portfolio);
         Json::Value toJson(); 
};
 

#endif
